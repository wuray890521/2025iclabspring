///////////////////////////////////////////////////////////////////////////////////
// 
//              Synchronous High Speed Single Port SRAM Compiler 
// 
//                    UMC 0.18um GenericII Logic Process
//    __________________________________________________________________________
// 
// 
//        (C) Copyright 2002-2009 Faraday Technology Corp. All Rights Reserved.
// 
//      This source code is an unpublished work belongs to Faraday Technology
//      Corp.  It is considered a trade secret and is not to be divulged or
//      used by parties who have not received written authorization from
//      Faraday Technology Corp.
// 
//      Faraday's home page can be found at:
//      http://www.faraday-tech.com/
//     
// ________________________________________________________________________________
// 
//       Module Name       :  SUMA180_16384X8X1BM8  
//       Word              :  16384                 
//       Bit               :  8                     
//       Byte              :  1                     
//       Mux               :  8                     
//       Power Ring Type   :  port                  
//       Power Ring Width  :  2 (um)                
//       Output Loading    :  0.05 (pf)             
//       Input Data Slew   :  0.02 (ns)             
//       Input Clock Slew  :  0.02 (ns)             
// 
// ________________________________________________________________________________
// 
//       Library          : FSA0M_A
//       Memaker          : 200901.2.1
//       Date             : 2025/03/27 00:46:35
// 
// ________________________________________________________________________________
// 
//       Library          : FSA0M_A
//       Memaker          : 200901.2.1
//       Date             : 2025/03/27 00:46:36
//
///////////////////////////////////////////////////////////////////////////////////

model SUMA180_16384X8X1BM8 (
    A13, A12, A11, A10, A9, A8, A7, A6, A5, A4, A3, A2, A1, A0,
    DI7, DI6, DI5, DI4, DI3, DI2, DI1, DI0,
    DO7, DO6, DO5, DO4, DO3, DO2, DO1, DO0,
    WEB,
    CK, CS, OE) (

    bist_definition (
        data_out      DO(DO7, DO6, DO5, DO4, DO3, DO2, DO1, DO0);
        data_in       DI(DI7, DI6, DI5, DI4, DI3, DI2, DI1, DI0);
        address       A (A13, A12, A11, A10, A9, A8, A7, A6, A5, A4, A3, A2, A1, A0);
        output_enable OE low;
        write_enable  WEB low;
        chip_enable   CS high;

        clock         CK high;
        tech          = FSA0M_A;
        vendor        = "Faraday Technology Inc.";
        version       = "200901.2.1";
        min_address   = 0;
        max_address   = 16383;
        data_size     = 8;
        top_column    = 8;
        top_word      = 1;

        descrambling_definition (
            address (
                DSC_A0 = A0;
                DSC_A1 = A1;
                DSC_A2 = A2;
                DSC_A3 = A3;
                DSC_A4 = A4;
                DSC_A5 = A5;
                DSC_A6 = A6;
                DSC_A7 = A7;
                DSC_A8 = A8;
                DSC_A9 = A9;
                DSC_A10 = A10;
                DSC_A11 = A11;
                DSC_A12 = A12;
                DSC_A13 = A13;
            )
            data_in (
                DSC_DI0 = DI0;
                DSC_DI1 = DI1;
                DSC_DI2 = DI2;
                DSC_DI3 = DI3;
                DSC_DI4 = DI4;
                DSC_DI5 = DI5;
                DSC_DI6 = DI6;
                DSC_DI7 = DI7;
            )
        )
        read_write_port(
            read_cycle(
                assert CS;
                change A;
                expect DO move;
            )
            write_cycle(
                assert CS;
                change A;
                change DI;
                assert WEB;
                wait;
            )
        )
    )
)
